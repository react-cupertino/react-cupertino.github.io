{"version":3,"sources":["pages/Components.jsx","pages/Home.jsx","pages/Installation.jsx","assets/github-logo.svg","components/Navbar/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Components","react_default","a","createElement","className","Home","Installation","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","github_logo_SvgComponent","props","width","height","viewBox","__webpack_require__","p","Navbar","Link","to","href","rel","App","components_Navbar_Navbar","Switch","Route","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.631df1b4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Components.css\";\n\nfunction Components() {\n  return (\n    <header className=\"App-header\">\n      <p>Components</p>\n    </header>\n  );\n}\n\nexport default Components;\n","import React from \"react\";\nimport \"./Home.css\";\n\nfunction Home() {\n  return (\n    <header className=\"App-header\">\n      <p>React Cupertino</p>\n    </header>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./Installation.css\";\n\nfunction Installation() {\n  return (\n    <div className=\"app-page\">\n      <article className=\"app-article\">\n        <h1>Getting started</h1>\n        <div className=\"article-content\">\n          <p>Learn how to install React Cupertino to your project.</p>\n          <h2>Installation</h2>\n          <p>You can install React Cupertino as an npm package:</p>\n          <pre className=\"codeblock\">npm install react-cupertino</pre>\n          <h2>Basic Usage</h2>\n          <p>\n            In the following example, you can see how to import{\" \"}\n            <code>PushButton</code> component and render it with title \"Agree\"\n            and green background color.\n          </p>\n          <pre className=\"codeblock\">\n            <span className=\"code-line\">\n              <span className=\"token keyword\">import</span>\n              {\" React \"}\n              <span className=\"token keyword\">from</span>{\" \"}\n              <span className=\"token string\">'react'</span>;\n            </span>\n            <span className=\"code-line\">\n              <span className=\"token keyword\">import</span>\n              {\" ReactDOM \"}\n              <span className=\"token keyword\">from</span>{\" \"}\n              <span className=\"token string\">'react-dom'</span>;\n            </span>\n            <span className=\"code-line\">\n              <span className=\"token keyword\">import</span>{\" \"}\n              <span className=\"token punctuation\">{\"{\"}</span> PushButton{\" \"}\n              <span className=\"token punctuation\">{\"}\"}</span>{\" \"}\n              <span className=\"token keyword\">from</span>{\" \"}\n              <span className=\"token string\">'react-cupertino'</span>;\n            </span>\n            <br />\n            <span className=\"code-line\">\n              {\"ReactDOM.\"}\n              <span className=\"token func\">render</span>\n              <span className=\"token punctuation\">(</span>\n            </span>\n            <span className=\"code-line\">\n              <span className=\"token punctuation\">{\"  <\"}</span>\n              <span className=\"token element\">PushButton</span>{\" \"}\n              <span className=\"token prop\">title</span>=\n              <span className=\"token string\">\"Agree\"</span>{\" \"}\n              <span className=\"token prop\">color</span>=\n              <span className=\"token string\">\"green\"</span>\n              <span className=\"token punctuation\">{\" />\"}</span>,\n            </span>\n            <span className=\"code-line\">\n              {\"  \"}document.\n              <span className=\"token func\">getElementById</span>(\n              <span className=\"token string\">'app'</span>)\n            </span>\n            <span className=\"code-line\">{\");\"}</span>\n          </pre>\n        </div>\n      </article>\n    </div>\n  );\n}\n\nexport default Installation;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/github-logo.1bb02710.svg\";\nexport { SvgComponent as ReactComponent };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as GithubLogo } from \"../../assets/github-logo.svg\";\nimport \"./Navbar.css\";\n\nfunction Navbar(props) {\n  return (\n    <header className=\"navbar\">\n      <div className=\"navbar-content\">\n        <nav>\n          <Link className=\"nav-link\" to=\"/\">\n            React Cupertino\n          </Link>\n          <Link className=\"nav-link\" to=\"/install\">\n            Installation\n          </Link>\n          <Link className=\"nav-link\" to=\"components\">\n            Components\n          </Link>\n        </nav>\n        <div className=\"navbar-links\">\n          <a\n            href=\"https://github.com/react-cupertino/react-cupertino\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GithubLogo className=\"navbar-icon\" />\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Components from \"./pages/Components\";\nimport Home from \"./pages/Home\";\nimport Installation from \"./pages/Installation\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/components\" component={Components} />\n          <Route path=\"/install\" component={Installation} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}